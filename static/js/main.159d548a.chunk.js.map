{"version":3,"sources":["layout/Navbar.js","context.js","forms/AddUser.js","forms/UpdateUser.js","components/User.js","components/Users.js","pages/NotFound.js","pages/Contribute.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","title","className","href","to","prototype","PropTypes","string","isRequired","defaultProps","UserContext","React","createContext","reducer","state","action","type","users","filter","user","payload","id","map","UserProvider","dispatch","setState","componentDidMount","a","axios","get","response","data","Provider","value","this","props","children","Component","UserConsumer","Consumer","Animation","posed","div","visible","opacity","applyAtStart","display","hidden","applyAtEnd","AddUser","name","department","salary","error","changeVisibility","e","validateForm","changeInput","target","addUser","preventDefault","newUser","post","history","push","onClick","pose","onSubmit","bind","htmlFor","placeholder","onChange","UpdateUser","match","params","updatedUser","put","User","isVisible","onClickEvent","onDeleteUser","delete","style","backgroundColor","color","cursor","Users","key","NotFound","Contribute","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.159d548a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar({title}) {\r\n    return (\r\n        <nav className=\"navbar-nav navbar-expand-lg navbar-dark bg-dark mb-3 p-3\">\r\n            <a href=\"/\" className=\"navbar-brand\">{title}</a>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item active\">\r\n                    <Link to = \"/\" className =\"nav-link\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                    <Link to = \"/add\" className =\"nav-link\">Add User</Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                    <Link to = \"/github\" className =\"nav-link\">Project Files</Link>\r\n                </li>\r\n\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\nNavbar.prototype = {\r\n    title : PropTypes.string.isRequired\r\n};\r\nNavbar.defaultProps = {\r\n    title : \"Default App\"\r\n};\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst   UserContext = React.createContext();\r\n//Provider, Consumer\r\n\r\nconst reducer = (state,action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_USER\":\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(user => action.payload !== user.id)\r\n            }\r\n        case \"ADD_USER\":\r\n            return {\r\n                ...state,\r\n                users : [...state.users,action.payload]\r\n            }\r\n        case \"UPDATE_USER\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.payload.id ? action.payload : user)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n    state = {\r\n        users: [\r\n\r\n        ],\r\n        dispatch : action => {\r\n            this.setState(state => reducer(state,action))\r\n        }\r\n    }\r\ncomponentDidMount = async () => {\r\n      const response = await axios.get(\"http://localhost:3000/users\");\r\n      this.setState({\r\n          users: response.data\r\n      })\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <UserContext.Provider value = {this.state}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        );\r\n    }\r\n}\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\nexport default UserConsumer\r\n","import React, { Component } from 'react';\r\nimport posed from 'react-pose';\r\nimport UserConsumer from \"../context\";\r\nimport axios from \"axios\";\r\n\r\nconst Animation = posed.div({\r\n    visible : {\r\n        opacity: 1,\r\n        applyAtStart : {\r\n            display : \"block\"\r\n        }\r\n    },\r\n    hidden : {\r\n        opacity:0,\r\n        applyAtEnd : {\r\n            display : \"none\"\r\n        }\r\n    }\r\n});\r\n\r\nclass AddUser extends Component {\r\n\r\n   state = {\r\n       visible : false,\r\n       name : \"\",\r\n       department : \"\",\r\n       salary : \"\",\r\n       error : false\r\n   }\r\n   changeVisibility = (e) => {\r\n       this.setState({\r\n        visible : !this.state.visible\r\n       })\r\n    }\r\n    validateForm = () => {\r\n       const {name,salary,department} = this.state;\r\n       if(name === \"\" || salary === \"\" || department === \"\") {\r\n           return false;\r\n       }\r\n       return true;\r\n    }\r\n    changeInput = (e) => {\r\n       this.setState({\r\n           // name = \"name\"\r\n           [e.target.name] : e.target.value\r\n       })\r\n    }\r\n    addUser = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,department,salary} = this.state;\r\n\r\n        const newUser = {\r\n            name,\r\n            department,\r\n            salary\r\n        }\r\n\r\n        if (!this.validateForm()) {\r\n            this.setState({\r\n                error : true\r\n            })\r\n            return;\r\n        }\r\n        const response = await axios.post(\"http://localhost:3000/users\",newUser);\r\n        dispatch({type : \"ADD_USER\",payload:response.data});\r\n\r\n        // Redirect\r\n        this.props.history.push(\"/\");\r\n   }\r\n\r\n\r\n    render() {\r\n       const {visible,name,salary,department,error} = this.state;\r\n       return <UserConsumer>\r\n           {\r\n               value => {\r\n                   const {dispatch} = value;\r\n                   return (\r\n                       <div className=\"col-md-8 mb-4\">\r\n                           <button onClick={this.changeVisibility} className = \"btn btn-dark btn-block mb-2\">{visible ? \"Hide Form\" : \"Show Form\"}</button>\r\n                           <Animation pose = {visible ? \"visible\" : \"hidden\"}>\r\n                               <div className=\"card-header\">\r\n                                   <h4>Add User Form</h4>\r\n                               </div>\r\n                               <div className=\"card-body\">\r\n                                   {\r\n                                       error ?\r\n                                           <div className = \"alert alert-danger\">\r\n                                            Lütfen bilgilerinizi kontrol edin.\r\n                                           </div>\r\n                                           :null\r\n                                   }\r\n                                   <form onSubmit = {this.addUser.bind(this,dispatch)}>\r\n                                       <div className=\"form--group\">\r\n                                           <label htmlFor=\"name\">Name</label>\r\n                                           <input\r\n                                               type = \"text\"\r\n                                               name = \"name\"\r\n                                               id = \"id\"\r\n                                               placeholder = \"Enter Name\"\r\n                                               className = \"form-control\"\r\n                                               value = {name}\r\n                                               onChange = {this.changeInput}\r\n                                           />\r\n                                       </div>\r\n                                       <div className=\"form--group\">\r\n                                           <label htmlFor=\"department\">Department</label>\r\n                                           <input\r\n                                               type=\"text\"\r\n                                               name=\"department\"\r\n                                               id=\"department\"\r\n                                               placeholder=\"Enter Department\"\r\n                                               className=\"form-control\"\r\n                                               value={department}\r\n                                               onChange = {this.changeInput}\r\n                                           />\r\n                                       </div>\r\n                                       <div className=\"form--group\">\r\n                                           <label htmlFor=\"salary\">Salary</label>\r\n                                           <input\r\n                                               type=\"text\"\r\n                                               name=\"salary\"\r\n                                               id=\"salary\"\r\n                                               placeholder=\"Enter Salary\"\r\n                                               className=\"form-control\"\r\n                                               value={salary}\r\n                                               onChange = {this.changeInput}\r\n                                           />\r\n                                       </div>\r\n                                       <button className = \"btn btn-danger btn-block mt-4\" type= \"submit\">Add User</button>\r\n                                   </form>\r\n                               </div>\r\n                           </Animation>\r\n                       </div>\r\n                   );\r\n               }\r\n           }\r\n       </UserConsumer>\r\n\r\n    }\r\n}\r\n\r\nexport default AddUser;","import React, { Component } from 'react';\r\nimport UserConsumer from \"../context\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass UpdateUser extends Component {\r\n\r\n    state = {\r\n        name : \"\",\r\n        department : \"\",\r\n        salary : \"\",\r\n        error : false\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        this.setState({\r\n            // name = \"name\"\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const {id} = this.props.match.params;\r\n\r\n        const response = await axios.get(`http://localhost:3000/users/${id}`);\r\n\r\n        const {name,salary,department} = response.data;\r\n        this.setState({\r\n            name,\r\n            salary,\r\n            department\r\n        });\r\n\r\n    }\r\n    validateForm = () => {\r\n        const {name,salary,department} = this.state;\r\n        if(name === \"\" || salary === \"\" || department === \"\") {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    UpdateUser = async (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        // Update User\r\n        const {name,salary,department} = this.state;\r\n        const {id} = this.props.match.params;\r\n        const updatedUser = {\r\n            name,\r\n            salary,\r\n            department\r\n        };\r\n        if (!this.validateForm()) {\r\n            this.setState({\r\n                error : true\r\n            })\r\n            return;\r\n        }\r\n        const response = await axios.put(`http://localhost:3000/users/${id}`,updatedUser);\r\n\r\n        dispatch({type: \"UPDATE_USER\",payload : response.data});\r\n\r\n        // Redirect\r\n        this.props.history.push(\"/\");\r\n    }\r\n    render() {\r\n        const {name,salary,department,error} = this.state;\r\n        return <UserConsumer>\r\n            {\r\n                value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"col-md-8 mb-4\">\r\n                                <div className=\"card-header\">\r\n                                    <h4>Update User Form</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {\r\n                                        error ?\r\n                                            <div className = \"alert alert-danger\">\r\n                                                Lütfen bilgilerinizi kontrol edin.\r\n                                            </div>\r\n                                            :null\r\n                                    }\r\n                                    <form onSubmit = {this.UpdateUser.bind(this,dispatch)}>\r\n                                        <div className=\"form--group\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                            <input\r\n                                                type = \"text\"\r\n                                                name = \"name\"\r\n                                                id = \"id\"\r\n                                                placeholder = \"Enter Name\"\r\n                                                className = \"form-control\"\r\n                                                value = {name}\r\n                                                onChange = {this.changeInput}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form--group\">\r\n                                            <label htmlFor=\"department\">Department</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"department\"\r\n                                                id=\"department\"\r\n                                                placeholder=\"Enter Department\"\r\n                                                className=\"form-control\"\r\n                                                value={department}\r\n                                                onChange = {this.changeInput}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form--group\">\r\n                                            <label htmlFor=\"salary\">Salary</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"salary\"\r\n                                                id=\"salary\"\r\n                                                placeholder=\"Enter Salary\"\r\n                                                className=\"form-control\"\r\n                                                value={salary}\r\n                                                onChange = {this.changeInput}\r\n                                            />\r\n                                        </div>\r\n                                        <button className = \"btn btn-danger btn-block mt-4\" type= \"submit\">Update User</button>\r\n                                    </form>\r\n                                </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        </UserConsumer>\r\n\r\n    }\r\n}\r\n\r\nexport default UpdateUser;","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport UserConsumer from \"../context\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass User extends Component {\r\n    state = {\r\n        isVisible : false\r\n    }\r\n    static defaultProps = {\r\n            name : \"Bilgi yok\",\r\n            salary : \"Bilgi yok\",\r\n           department : \"Bilgi yok\"\r\n    }\r\n\r\n\r\n    onClickEvent = (e) => {\r\n      this.setState({\r\n          isVisible : !this.state.isVisible\r\n      })\r\n    }\r\n\r\n    onDeleteUser = async (dispatch,e) => {\r\n        const {id} = this.props;\r\n        // Delete Request\r\n        await axios.delete(`http://localhost:3000/users/${id}`);\r\n\r\n        //Consumer Dispatch\r\n        dispatch({type : \"DELETE_USER\",payload:id});\r\n    }\r\n    render() {\r\n\r\n        // Destructing\r\n        const {id,name,department,salary} = this.props;\r\n        const {isVisible}  = this.state;\r\n        return (<UserConsumer>\r\n            {\r\n                value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"col-md-8 mb-4\">\r\n                            <div className=\"card\" style = {isVisible ? {backgroundColor : \"#336666\", color : \"white\"} : null}>\r\n                                <div className=\"card-header d-flex justify-content-between\">\r\n                                    <h4 className=\"d-inline\" onClick={this.onClickEvent}>{name}</h4>\r\n                                    <i onClick = {this.onDeleteUser.bind(this,dispatch)} className=\"far fa-trash-alt\" style = {{cursor : \"pointer\"}}></i>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                isVisible ?\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">Maaş : {salary}</p>\r\n                                        <p className=\"card-text\">Department : {department}</p>\r\n                                        <Link to = {`edit/${id}`} className = \"btn btn-dark btn-block\">Update User</Link>\r\n\r\n                                    </div> : null\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        </UserConsumer>)\r\n\r\n    }\r\n}\r\n\r\n\r\nUser.propTypes = {\r\n    name : PropTypes.string.isRequired,\r\n    salary : PropTypes.string.isRequired,\r\n    department : PropTypes.string.isRequired,\r\n    id : PropTypes.string.isRequired\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport User from \"./User\";\r\nimport UserConsumer from \"../context\";\r\n\r\nclass Users extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <UserConsumer>\r\n                {\r\n                    value => {\r\n                        const {users} = value;\r\n                        return (\r\n                            <div>\r\n                                {\r\n                                    users.map(user => {\r\n                                        return (\r\n                                            <User\r\n                                                key = {user.id}\r\n                                                id = {user.id}\r\n                                                name = {user.name}\r\n                                                salary = {user.salary}\r\n                                                department = {user.department}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </UserConsumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\n\r\nfunction NotFound() {\r\n        return (\r\n            <div>\r\n                404 Not Found\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\n\r\nfunction Contribute() {\r\n        return (\r\n            <div>\r\n                <h3>Project Files and Contribute to Project</h3>\r\n                <p>\r\n                    You can download full project from <a href = \"https://github.com/dragnan\">this </a> github page.\r\n                Also, you can contribute to this project.\r\n                </p>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\n\r\nexport default Contribute;","import React, { Component } from 'react'\nimport Navbar from \"./layout/Navbar\"\nimport AddUser from \"./forms/AddUser\";\nimport UpdateUser from \"./forms/UpdateUser\";\nimport './App.css';\nimport Users from \"./components/Users\";\nimport NotFound from \"./pages/NotFound\";\nimport Contribute from \"./pages/Contribute\";\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\n\nclass App extends Component {\n\n render() {\n\n    return (\n        <Router>\n        <div className=\"container\">\n          <Navbar title=\"User App\"/>\n          <hr/>\n\n            <Switch>\n          <Route exact path = \"/\" component={Users} />\n          <Route exact path = \"/add\" component={AddUser} />\n          <Route exact path = \"/github\" component={Contribute} />\n          <Route exact path = \"/edit/:id\" component = {UpdateUser} />\n          <Route component={NotFound} />\n            </Switch>\n\n        </div>\n        </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {UserProvider} from \"./context\";\n\nReactDOM.render(\n    <UserProvider>\n    <App />\n    </UserProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}